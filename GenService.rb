#!/usr/bin/env ruby

require 'thor'
require 'fileutils'
require 'pathname'
require 'kiss_shot'

class GenService < Thor
  # Extension for KissShot
  module KissShotExt
    def objc_h_header(filename, copyright)
      objc_block_comment do
        line "#{filename}"
        line "Copyright #{Time.now.year} (c) #{copyright}, All Rights Reserved."
        line "Generated by KissShot"
      end
      line
    end
  end

  # The create Command
  desc "create NAME", "Create a service"
  method_option :copyright, aliases: ['-c'], desc: 'Copyright information', required: true, type: :string, default: 'Ju Xian (BeiJing) Technology Co., Ltd.'
  method_option :directory, aliases: ['-d'], desc: 'Resource directory', required: true, type: :string
  method_option :prefix,    aliases: ['-p'], desc: 'Class prefix for generated classes', required: true, type: :string, default: 'YM'
  def create(name)
    raise "service name not speicifed" if name.nil?
    copyright = options['copyright']
    prefix    = options['prefix']
    directory = options['directory']
    raise "#{directory} is not a directory" unless File.directory? directory

    # Write the YMXXServiceBackend protocol
    File.open "#{directory}/#{prefix}#{name}Backend.h", 'w' do |f|
      content = KissShot::Spec.run do
        use KissShot::ObjC::All
        use GenService::KissShotExt

        objc_h_header "#{prefix}#{name}Backend.h", copyright
        objc_import_d "Foundation/Foundation.h"
        objc_protocol "#{prefix}#{name}Backend" do
          objc_protocol_required
        end
      end
      f.write content
    end

    # Write the YMXXService.h
    File.open "#{directory}/#{prefix}#{name}.h", 'w' do |f|
      content = KissShot::Spec.run do
        use KissShot::ObjC::All
        use GenService::KissShotExt

        objc_h_header "#{prefix}#{name}.h", copyright
        objc_import_d "Foundation/Foundation.h"
        objc_import_q "#{prefix}#{name}Backend.h"
        objc_import_q "#{prefix}BaseService.h"
        line
        objc_interface "#{prefix}#{name}", "YMBaseService" do
          line
          objc_property "backend", ["id<#{prefix}#{name}Backend>", "__nonnull"]
          line
        end
      end
      f.write content
    end

    # Write the YMXXService.m
    File.open "#{directory}/#{prefix}#{name}.m", 'w' do |f|
      content = KissShot::Spec.run do
        use KissShot::ObjC::All
        use GenService::KissShotExt

        objc_h_header "#{prefix}#{name}.m", copyright
        objc_import_q "#{prefix}#{name}.h"
        objc_import_q "#{prefix}#{name}BackendImpl.h"
        line

        objc_implementation "#{prefix}#{name}" do
          line
          objc_method false, :void, :staticInit do
            line "[super staticInit];"
          end
          line
          objc_method false, :void, :syncInit do
            line "[super syncInit];"
            line "self.backend = [[#{prefix}#{name}BackendImpl alloc] init];"
          end
          line
          objc_method false, :void, :asyncInit do
            line "[super asyncInit];"
          end
          line
        end
      end
      f.write content
    end
  end
end

GenService.start
